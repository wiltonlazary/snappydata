hydra.Prms-testRequirement = "Test to validate deploy undeploy behaviour ";
hydra.Prms-testDescription = "The test will start a cassandra cluster and load data in it.
Deplpy the cassandra connector jar and then from snappyjob ,create an external table/column table from cassandra table.
Execute couple of queries.UnDeploy the jar and then reexecute the queries";

INCLUDE $JTESTS/io/snappydata/hydra/northwind/startEmbeddedModeCluster.conf;

//Start cassandra cluster and execute createAndLoad script for cassandra.
INITTASK    taskClass   = io.snappydata.hydra.deployPkgUDF.SnappyDeployUnDeployTest taskMethod  = HydraTask_startCassandraCluster
            io.snappydata.hydra.cdcConnector.SnappyCDCPrms-snappyFileLoc = ${cassPath}
            io.snappydata.hydra.cluster.SnappyPrms-dataLocation = ${scriptPath}
            threadGroups = snappyThreads;

//Deploy package
INITTASK    taskClass   = io.snappydata.hydra.deployPkgUDF.SnappyDeployUnDeployTest taskMethod  = HydraTask_deployPkg
            io.snappydata.hydra.cluster.SnappyPrms-dataLocation = ${pkgPath}
            threadGroups = snappyThreads;

//Create external table and then create column table from Cassandra Table
INITTASK    taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSQLScripts
            io.snappydata.hydra.cluster.SnappyPrms-sqlScriptNames = createAndLoadSnappyTable.sql
            threadGroups = snappyThreads;

//Execute queries
INITTASK    taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSQLScripts
            io.snappydata.hydra.cluster.SnappyPrms-sqlScriptNames = dmlOpsForDeployUnDeploy.sql
            threadGroups = snappyThreads;

//Create tables from embedded mode
INITTASK   taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSnappyJob
           io.snappydata.hydra.cluster.SnappyPrms-jobClassNames = io.snappydata.hydra.deployPkgUDF.AccessDeployedJarSnappyJob
           io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "isException=false,expectedRowCnt=10"
           io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
           threadGroups = snappyThreads;

//Undeploy package
INITTASK    taskClass   = io.snappydata.hydra.deployPkgUDF.SnappyDeployUnDeployTest taskMethod  = HydraTask_unDeployPkg
            threadGroups = snappyThreads;

//Execute queries
INITTASK    taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSQLScripts
            io.snappydata.hydra.cluster.SnappyPrms-sqlScriptNames = dmlOpsForDeployUnDeploy.sql
            threadGroups = snappyThreads;


//Create tables from embedded mode ,exception expected
INITTASK   taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSnappyJob
           io.snappydata.hydra.cluster.SnappyPrms-jobClassNames = io.snappydata.hydra.deployPkgUDF.AccessDeployedJarSnappyJob
           io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "isException=true,expectedRowCnt=0"
           io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
           threadGroups = snappyThreads;

//Create external table and then create column table from Cassandra Table ,Exception is expected
INITTASK    taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSQLScripts
            io.snappydata.hydra.cluster.SnappyPrms-sqlScriptNames = createAndLoadSnappyTable.sql
            threadGroups = snappyThreads;

CLOSETASK   taskClass   = io.snappydata.hydra.deployPkgUDF.SnappyDeployUnDeployTest taskMethod = HydraTask_stopCassandraCluster
            threadGroups = snappyThreads;

INCLUDE $JTESTS/io/snappydata/hydra/northwind/stopEmbeddedModeCluster.conf;

hydra.Prms-totalTaskTimeSec           = 900;
hydra.Prms-maxResultWaitSec           = 3600;
io.snappydata.hydra.cluster.SnappyPrms-serverMemory = 4g;
io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar;


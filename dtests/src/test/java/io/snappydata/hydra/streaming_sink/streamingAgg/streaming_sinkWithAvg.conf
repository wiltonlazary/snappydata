INCLUDE $JTESTS/io/snappydata/hydra/streaming_sink/streamingAgg/startClusterAgg.inc;

INITTASK     taskClass   = io.snappydata.hydra.adAnalytics.SnappyAdAnalyticsTest taskMethod  = HydraTask_executeSnappyJob
    io.snappydata.hydra.cluster.SnappyPrms-jobClassNames = io.snappydata.hydra.streaming_sink.CreateTableForAvgJob
    io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "tableName=persoon,isRowTable=${isRowTable},withKeyColumn=${withKeyColumn},isPartitioned=${isPartitioned}"
    io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
    threadGroups = snappyThreads;

INITTASK     taskClass   = io.snappydata.hydra.adAnalytics.SnappyAdAnalyticsTest taskMethod  = HydraTask_executeSnappyStreamingJob
    io.snappydata.hydra.cluster.SnappyPrms-streamingJobClassNames = io.snappydata.hydra.streaming_sink.SnappyStreamingSinkJobWithAggregate
    io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "kafkaTopic=streamingSinkTopic,tableName=persoon,isConflation=false,outputMode=${outputMode},aggType=avg"
    io.snappydata.hydra.cluster.SnappyPrms-userAppName = streamingSinkApp
    io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
    threadGroups = snappyThreads;

INCLUDE $JTESTS/io/snappydata/hydra/streaming_sink/streamingAgg/streamingAgg.inc;

INCLUDE $JTESTS/io/snappydata/hydra/streaming_sink/stopClusters.inc;

io.snappydata.hydra.testDMLOps.SnappySchemaPrms-aggType="avg";
hydra.Prms-testRequirement = "Test to verify concurrent putInto functionality along with concurrent select ops to identify the memory leak.";
hydra.Prms-testDescription = "
This test starts the snappy cluster.
Creates column table using sql script.
Runs the concurrent putInto and loads data , through streaming job
bulk delete will be executed in between along with select queries using 1 thread for each op in snappy job.
";

INCLUDE $JTESTS/io/snappydata/hydra/putInto/startClusterWithKafka.inc;
INITTASK  taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSQLScripts
          io.snappydata.hydra.cluster.SnappyPrms-sqlScriptNames = create_and_load_30ColTable.sql
          threadGroups = snappyInitThread
          ;

INITTASK  taskClass   = io.snappydata.hydra.adAnalytics.SnappyAdAnalyticsTest taskMethod  = HydraTask_StartKafkaTopic
          io.snappydata.hydra.cluster.SnappyPrms-kafkaTopic="streamingSinkTopic"
          runMode = always
          threadGroups = snappyInitThread;

INITTASK  taskClass   = io.snappydata.hydra.adAnalytics.SnappyAdAnalyticsTest taskMethod  = HydraTask_executeSnappyStreamingJob
          io.snappydata.hydra.cluster.SnappyPrms-streamingJobClassNames = io.snappydata.hydra.putInto.PutIntoReceiver
          io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "kafkaTopic=streamingSinkTopic,tableName=testL"
          io.snappydata.hydra.cluster.SnappyPrms-userAppName = streamingApp1
          io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
          threadGroups = snappyInitThread;

INITTASK  taskClass   = io.snappydata.hydra.adAnalytics.SnappyAdAnalyticsTest taskMethod  = HydraTask_executeSnappyStreamingJob
          io.snappydata.hydra.cluster.SnappyPrms-streamingJobClassNames = io.snappydata.hydra.putInto.PutIntoReceiver
          io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "kafkaTopic=streamingSinkTopic,tableName=testL1"
          io.snappydata.hydra.cluster.SnappyPrms-userAppName = streamingApp2
          io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
          threadGroups = snappyInitThread;

INITTASK  taskClass   = io.snappydata.hydra.adAnalytics.SnappyAdAnalyticsTest taskMethod  = HydraTask_executeSnappyStreamingJob
          io.snappydata.hydra.cluster.SnappyPrms-streamingJobClassNames = io.snappydata.hydra.putInto.PutIntoReceiver
          io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "kafkaTopic=streamingSinkTopic,tableName=testL2"
          io.snappydata.hydra.cluster.SnappyPrms-userAppName = streamingApp3
          io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
          threadGroups = snappyInitThread;

INITTASK  taskClass   = io.snappydata.hydra.adAnalytics.SnappyAdAnalyticsTest taskMethod  = HydraTask_executeSnappyStreamingJob
          io.snappydata.hydra.cluster.SnappyPrms-streamingJobClassNames = io.snappydata.hydra.putInto.PutIntoReceiver
          io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "kafkaTopic=streamingSinkTopic,tableName=testL3"
          io.snappydata.hydra.cluster.SnappyPrms-userAppName = streamingApp4
          io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
          threadGroups = snappyInitThread;

INITTASK  taskClass   = io.snappydata.hydra.adAnalytics.SnappyAdAnalyticsTest taskMethod  = HydraTask_executeSnappyStreamingJob
          io.snappydata.hydra.cluster.SnappyPrms-streamingJobClassNames = io.snappydata.hydra.putInto.PutIntoReceiver
          io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "kafkaTopic=streamingSinkTopic,tableName=testL4"
          io.snappydata.hydra.cluster.SnappyPrms-userAppName = streamingApp5
          io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
          threadGroups = snappyInitThread;

INITTASK  taskClass   = io.snappydata.hydra.adAnalytics.SnappyAdAnalyticsTest taskMethod  = HydraTask_executeSnappyStreamingJob
          io.snappydata.hydra.cluster.SnappyPrms-streamingJobClassNames = io.snappydata.hydra.putInto.PutIntoReceiver
          io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "kafkaTopic=streamingSinkTopic,tableName=testL5"
          io.snappydata.hydra.cluster.SnappyPrms-userAppName = streamingApp6
          io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
          threadGroups = snappyInitThread;

INITTASK  taskClass   = io.snappydata.hydra.adAnalytics.SnappyAdAnalyticsTest taskMethod  = HydraTask_executeSnappyStreamingJob
          io.snappydata.hydra.cluster.SnappyPrms-streamingJobClassNames = io.snappydata.hydra.putInto.PutIntoReceiver
          io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "kafkaTopic=streamingSinkTopic,tableName=testL6"
          io.snappydata.hydra.cluster.SnappyPrms-userAppName = streamingApp7
          io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
          threadGroups = snappyInitThread;

INITTASK  taskClass   = io.snappydata.hydra.adAnalytics.SnappyAdAnalyticsTest taskMethod  = HydraTask_executeSnappyStreamingJob
          io.snappydata.hydra.cluster.SnappyPrms-streamingJobClassNames = io.snappydata.hydra.putInto.PutIntoReceiver
          io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "kafkaTopic=streamingSinkTopic,tableName=testL7"
          io.snappydata.hydra.cluster.SnappyPrms-userAppName = streamingApp8
          io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
          threadGroups = snappyInitThread;

INITTASK  taskClass   = io.snappydata.hydra.adAnalytics.SnappyAdAnalyticsTest taskMethod  = HydraTask_executeSnappyStreamingJob
          io.snappydata.hydra.cluster.SnappyPrms-streamingJobClassNames = io.snappydata.hydra.putInto.PutIntoReceiver
          io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "kafkaTopic=streamingSinkTopic,tableName=testL8"
          io.snappydata.hydra.cluster.SnappyPrms-userAppName = streamingApp9
          io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
          threadGroups = snappyInitThread;

INITTASK  taskClass   = io.snappydata.hydra.adAnalytics.SnappyAdAnalyticsTest taskMethod  = HydraTask_executeSnappyStreamingJob
          io.snappydata.hydra.cluster.SnappyPrms-streamingJobClassNames = io.snappydata.hydra.putInto.PutIntoReceiver
          io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "kafkaTopic=streamingSinkTopic,tableName=testL9"
          io.snappydata.hydra.cluster.SnappyPrms-userAppName = streamingApp10
          io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
          threadGroups = snappyInitThread;

INITTASK  taskClass   = io.snappydata.hydra.adAnalytics.SnappyAdAnalyticsTest taskMethod  = HydraTask_executeSnappyStreamingJob
          io.snappydata.hydra.cluster.SnappyPrms-streamingJobClassNames = io.snappydata.hydra.putInto.PutIntoReceiver
          io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "kafkaTopic=streamingSinkTopic,tableName=testL10"
          io.snappydata.hydra.cluster.SnappyPrms-userAppName = streamingApp11
          io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
          threadGroups = snappyInitThread;

TASK      taskClass   = io.snappydata.hydra.adAnalytics.SnappyAdAnalyticsTest taskMethod = HydraTask_generateAndPublish
          io.snappydata.hydra.cluster.SnappyPrms-streamingJobClassNames = "io.snappydata.hydra.putInto.PutIntoProducer"
          io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "1000000000,streamingSinkTopic,0"
          io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
          threadGroups = snappyThread
          maxThreads = 1
          maxTimesToRun = 1;

/* TASK      taskClass   = io.snappydata.hydra.putInto.SnappyPutIntoTest taskMethod  = HydraTask_bulkDelete
           io.snappydata.hydra.cdcConnector.SnappyCDCPrms-nodeName= testl testl1 testl2 testl3 testl4 testl5 testl6 testl7 testl8 testl9 testl10
           startInterval = 1800 //after 30mins
           endInterval   = 1800
           maxThreads = 1
           threadGroups = snappyThread; */

// INCLUDE $JTESTS/io/snappydata/hydra/streaming_sink/stopClusters.inc;

io.snappydata.hydra.cluster.SnappyPrms-useJDBCConnInSnappyJob = true;
io.snappydata.hydra.cluster.SnappyPrms-isLongRunningJob = true;
hydra.Prms-maxResultWaitSec           = 86400;
hydra.Prms-maxCloseTaskResultWaitSec  = 86400;
hydra.Prms-totalTaskTimeSec           = 259200;

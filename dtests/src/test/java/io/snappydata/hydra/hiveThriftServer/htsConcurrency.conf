hydra.Prms-testRequirement = "Test for Hive Thrift Server concurrency.";
hydra.Prms-testDescription = "This test create, insert, update and delete records from beeline to snappy and vice versa.
                                                         All the DML operations are concurrent";

INCLUDE $JTESTS/io/snappydata/hydra/northwind/startDualModeCluster.conf;

INITTASK taskClass = io.snappydata.hydra.hiveThriftServer.HiveThrifServerUtils taskMethod = HydraTask_initialize
                   threadGroups = snappyThreads,snappyStoreThreads,leadThreads,locatorThreads,workerThreads;

INITTASK taskClass = io.snappydata.hydra.hiveThriftServer.HiveThrifServerUtils taskMethod = HydraTask_CreateTableFromBeeline
                   io.snappydata.hydra.cluster.SnappyPrms-dataLocation = ${dataFilesLocation}
                   threadGroups = snappyThreads;

INITTASK taskClass = io.snappydata.hydra.hiveThriftServer.HiveThrifServerUtils taskMethod = HydraTask_CreateTableFromSnappy
                   io.snappydata.hydra.cluster.SnappyPrms-dataLocation = ${dataFilesLocation}
                   threadGroups = snappyThreads;

INITTASK taskClass = io.snappydata.hydra.hiveThriftServer.HiveThrifServerUtils taskMethod = HydraTask_verfiyLoad
                   threadGroups = snappyThreads;

TASK taskClass = io.snappydata.hydra.hiveThriftServer.HiveThrifServerUtils taskMethod =  HydraTask_performDMLOps
           threadGroups = snappyStoreThreads;

CLOSETASK taskClass = io.snappydata.hydra.hiveThriftServer.HiveThrifServerUtils taskMethod = HydraTask_DropTableFromBeeline
                        threadGroups = snappyThreads;

CLOSETASK taskClass = io.snappydata.hydra.hiveThriftServer.HiveThrifServerUtils taskMethod = HydraTask_DropTableFromSnappy
                        threadGroups = snappyThreads;



INCLUDE $JTESTS/io/snappydata/hydra/northwind/stopDualModeCluster.conf;

hydra.Prms-totalTaskTimeSec = 120;
hydra.Prms-maxResultWaitSec = 3600;
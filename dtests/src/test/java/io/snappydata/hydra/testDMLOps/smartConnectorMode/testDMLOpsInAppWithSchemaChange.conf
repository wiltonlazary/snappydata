hydra.Prms-testRequirement = "Test to reproduce scenario in SNAP-2228";
hydra.Prms-testDescription = "Test starts snappy and spark clusters. It creates tables and loads data into it.
Later dml operations are executed on the table. After few operations, the table is dropped and
recreated with new schema in the embedded mode and dmls are performed on the table. The dmls should
work without any failure irrespective of the schema. The configuration statements are read from a configuration file. ";

INCLUDE $JTESTS/io/snappydata/hydra/connectionPool/connPool.inc;

INCLUDE $JTESTS/io/snappydata/hydra/northwind/startDualModeCluster.conf;

INCLUDE $JTESTS/io/snappydata/hydra/testDMLOps/schema.inc;

INITTASK     taskClass   = io.snappydata.hydra.testDMLOps.SnappyDMLOpsUtil taskMethod  = HydraTask_initialize
	  threadGroups = snappyThreads,leadThreads,snappyStoreThreads;

INITTASK     taskClass   = io.snappydata.hydra.testDMLOps.SnappyDMLOpsUtil taskMethod  = HydraTask_createSnappySchemas
	  threadGroups = snappyThreads;

INITTASK     taskClass   = io.snappydata.hydra.testDMLOps.SnappyDMLOpsUtil taskMethod  = HydraTask_createSnappyTables
	  threadGroups = snappyThreads;

INITTASK     taskClass   = io.snappydata.hydra.testDMLOps.SnappyDMLOpsUtil taskMethod  = HydraTask_saveTableMetaDataToBB
	  threadGroups = snappyThreads;

INITTASK     taskClass   = io.snappydata.hydra.testDMLOps.SnappyDMLOpsUtil taskMethod  = HydraTask_registerDMLThreads
	  threadGroups = snappyStoreThreads;

// load data using batch insert
INITTASK     taskClass   = io.snappydata.hydra.testDMLOps.SnappyDMLOpsUtil taskMethod  = HydraTask_populateTables
	  threadGroups = snappyThreads;

//task for running dmlOps using JDBC connection
TASK        taskClass   = io.snappydata.hydra.testDMLOps.SnappyDMLOpsUtil taskMethod  = HydraTask_performDMLOp
    threadGroups = snappyStoreThreads;

//task for running dmlOps using smart connector mode
TASK         taskClass   = io.snappydata.hydra.testDMLOps.SnappyDMLOpsUtil taskMethod  = HydraTask_performDMLOpsInApp
    io.snappydata.hydra.cluster.SnappyPrms-sparkJobClassNames = io.snappydata.hydra.testDMLOps.ValidateDMLOpApp
    io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
    io.snappydata.hydra.cluster.SnappyPrms-hasDynamicAppProps = true
    threadGroups = snappyStoreThreads
    ;

// drops table and recreates table in embedded mode and loads data into the table.
CLOSETASK    taskClass   = io.snappydata.hydra.testDMLOps.SnappyDMLOpsUtil taskMethod  = HydraTask_changeTableSchema
    io.snappydata.hydra.cluster.SnappyPrms-jobClassNames = io.snappydata.hydra.testDMLOps.RecreateTableInSnappyJob
    io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
    io.snappydata.hydra.cluster.SnappyPrms-hasDynamicAppProps = true
    threadGroups = snappyThreads
    ;

CLOSETASK    taskClass   = io.snappydata.hydra.testDMLOps.SnappyDMLOpsUtil taskMethod  = HydraTask_performDMLOpsInAppAfterSchemaChange
    io.snappydata.hydra.cluster.SnappyPrms-sparkJobClassNames = io.snappydata.hydra.testDMLOps.ValidateDMLOpApp
    io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
    io.snappydata.hydra.cluster.SnappyPrms-hasDynamicAppProps = true
    threadGroups = snappyStoreThreads
    ;

INCLUDE $JTESTS/io/snappydata/hydra/northwind/stopDualModeCluster.conf;

hydra.Prms-totalTaskTimeSec           = 120;
hydra.Prms-maxResultWaitSec           = 900;

io.snappydata.hydra.testDMLOps.SnappySchemaPrms-testUniqueKeys = true;

io.snappydata.hydra.testDMLOps.SnappySchemaPrms-dmlOperations = ONEOF insert update insert insert delete insert FOENO;

io.snappydata.hydra.testDMLOps.SnappySchemaPrms-useCsv = false;


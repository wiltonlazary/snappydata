hydra.Prms-testRequirement = "Test to reproduce scenario in SNAP-3055";
hydra.Prms-testDescription = "Test starts snappy and spark clusters. It creates tables and loads
data using snappyJob. It uses parquet files to load data in it.
Later dml operations are executed on the table. After few operations, the schema is dropped and
cluster is restarted. Cluster should restart without any issues. ";

INCLUDE $JTESTS/io/snappydata/hydra/connectionPool/connPool.inc;

INCLUDE $JTESTS/io/snappydata/hydra/testDMLOps/columnTableExtn.inc; //change this as per table type

INCLUDE $JTESTS/io/snappydata/hydra/northwind/startDualModeCluster.conf;

INCLUDE $JTESTS/io/snappydata/hydra/testDMLOps/nw_schema_dropSchema.inc;

INITTASK     taskClass   = io.snappydata.hydra.testDMLOps.SnappyDMLOpsUtil taskMethod  = HydraTask_initialize
	  threadGroups = snappyThreads,leadThreads,snappyStoreThreads;

INITTASK     taskClass   = io.snappydata.hydra.testDMLOps.SnappyDMLOpsUtil taskMethod  = HydraTask_createSnappySchemas
	  threadGroups = snappyThreads;

INITTASK     taskClass   = io.snappydata.hydra.testDMLOps.SnappyDMLOpsUtil taskMethod  = HydraTask_createSnappyTables
	  threadGroups = snappyThreads;

INITTASK     taskClass   = io.snappydata.hydra.testDMLOps.SnappyDMLOpsUtil taskMethod  = HydraTask_saveTableMetaDataToBB
	  threadGroups = snappyThreads;

INITTASK     taskClass   = io.snappydata.hydra.testDMLOps.SnappyDMLOpsUtil taskMethod  = HydraTask_registerDMLThreads
	  threadGroups = snappyStoreThreads;

// load data using batch insert
INITTASK     taskClass   = io.snappydata.hydra.testDMLOps.SnappyDMLOpsUtil taskMethod  = HydraTask_populateTablesUsingSysProc
    io.snappydata.hydra.cluster.SnappyPrms-jobClassNames = io.snappydata.hydra.testDMLOps.ConvertCsvToParquetAndLoadTablesJob
    io.snappydata.hydra.cluster.SnappyPrms-hasDynamicAppProps = true
	  threadGroups = snappyThreads;

//task for running dmlOps using smart connector mode
TASK         taskClass   = io.snappydata.hydra.testDMLOps.SnappyDMLOpsUtil taskMethod  = HydraTask_performDMLOpsInApp
    io.snappydata.hydra.cluster.SnappyPrms-sparkJobClassNames = io.snappydata.hydra.testDMLOps.ValidateDMLOpApp
    io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
    io.snappydata.hydra.cluster.SnappyPrms-hasDynamicAppProps = true
    threadGroups = snappyStoreThreads
    ;

//task for running dmlOps
TASK        taskClass   = io.snappydata.hydra.testDMLOps.SnappyDMLOpsUtil taskMethod  = HydraTask_performDMLOpsInJob
  io.snappydata.hydra.cluster.SnappyPrms-jobClassNames = io.snappydata.hydra.testDMLOps.ValidateDMLOpJob
  io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
  io.snappydata.hydra.cluster.SnappyPrms-hasDynamicAppProps = true
  threadGroups = snappyStoreThreads;

//task for running dmlOps using JDBC connection
TASK        taskClass   = io.snappydata.hydra.testDMLOps.SnappyDMLOpsUtil taskMethod  = HydraTask_performDMLOp
  threadGroups = snappyStoreThreads;

//task for running dropping the schema
CLOSETASK   taskClass   = io.snappydata.hydra.testDMLOps.SnappyDMLOpsUtil taskMethod = HydraTask_dropSnappySchemas
    threadGroups = snappyThreads;

//task for running select queries at the end of test
CLOSETASK   taskClass   = io.snappydata.hydra.testDMLOps.SnappyDMLOpsUtil taskMethod = HydraTask_restartSnappyCluster
    threadGroups = snappyThreads;


INCLUDE $JTESTS/io/snappydata/hydra/northwind/stopDualModeCluster.conf;

hydra.Prms-totalTaskTimeSec           = 300;
hydra.Prms-maxResultWaitSec           = 900;

io.snappydata.hydra.testDMLOps.SnappySchemaPrms-testUniqueKeys = true;
io.snappydata.hydra.testDMLOps.SnappySchemaPrms-largeDataSet = true;
io.snappydata.hydra.testDMLOps.SnappySchemaPrms-dmlOperations = ONEOF insert update insert insert delete insert FOENO;

hydra.VmPrms-extraVMArgs =
  fcn
       "hydra.TestConfigFcns.duplicate(\"-Xms3072m -Xmx3072m\", ${${A}Hosts}, true)"
  ncf,
  fcn
       "hydra.TestConfigFcns.duplicate(\"-Xms2072m -Xmx2072m\", ${${B}Hosts}, true)"
  ncf,
  fcn
       "hydra.TestConfigFcns.duplicate(\"-Xms1024m -Xmx1024m\", ${${C}Hosts}, true)"
  ncf;

io.snappydata.hydra.cluster.SnappyPrms-serverLauncherProps = " -heap-size=4g -memory-size=8g ";

io.snappydata.hydra.cluster.SnappyPrms-executorMemory = 4g;
io.snappydata.hydra.cluster.SnappyPrms-leadMemory = 4g;

io.snappydata.hydra.cluster.SnappyPrms-forceStart = true;
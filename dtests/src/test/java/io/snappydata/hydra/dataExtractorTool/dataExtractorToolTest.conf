hydra.Prms-testRequirement = "Test to verify, dataExtractor feature in a clean shut down case.";
 hydra.Prms-testDescription = "The test starts a normal cluster ,creates tables and populates it.
 Then the cluster is stopped and restarted in recovery mode.
 After the cluster is started in recovery mode, dml ops and ddls are executed,
 validation is done to see if the cluster is started in read only mode, ";

 INCLUDE $JTESTS/io/snappydata/hydra/northwind/startEmbeddedModeCluster.conf;

 INITTASK    taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSQLScripts
             io.snappydata.hydra.cluster.SnappyPrms-sqlScriptNames = ${scriptName}
             io.snappydata.hydra.cluster.SnappyPrms-dataLocation = ${dataFilesLocation}
             threadGroups = snappyThreads;

//Do dmloperations.
INITTASK   taskClass   = io.snappydata.hydra.dataExtractorTool.DataExtractorToolTest taskMethod  = HydraTask_executeQuery
           io.snappydata.hydra.security.SnappySecurityPrms-dataLocation = ${dmlOpsFileLocation}
           threadGroups = snappyThreads;


 // Take table count
 INITTASK    taskClass  = io.snappydata.hydra.cdcConnector.SnappyCDCTest taskMethod  = HydraTask_storeDataCount
             io.snappydata.hydra.cdcConnector.SnappyCDCPrms-dataLocation = ${queryPath}
             io.snappydata.hydra.cdcConnector.SnappyCDCPrms-isBeforeRestart = true
             threadGroups = snappyThreads;

  //Stop the cluster
INITTASK   taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_stopSnappyCluster
           threadGroups = snappyThreads;


INCLUDE $JTESTS/io/snappydata/hydra/dataExtractorTool/dataExtractorToolStartStopCluster.conf;

//Execute DML query using jdbc connection and validate, they should not work in recovery mode
CLOSETASK  taskClass   = io.snappydata.hydra.dataExtractorTool.DataExtractorToolTest taskMethod  = HydraTask_executeQuery
           io.snappydata.hydra.security.SnappySecurityPrms-dataLocation = ${dmlFileLocation}
           io.snappydata.hydra.security.SnappySecurityPrms-expectedExcptCnt = 4
           io.snappydata.hydra.security.SnappySecurityPrms-unExpectedExcptCnt = 0
           threadGroups = snappyThreads;

//Execute DDL query using jdbc connection and validate, they should not work in recovery mode
CLOSETASK  taskClass   = io.snappydata.hydra.dataExtractorTool.DataExtractorToolTest taskMethod  = HydraTask_executeQuery
           io.snappydata.hydra.security.SnappySecurityPrms-dataLocation = ${ddlFileLocation}
           io.snappydata.hydra.security.SnappySecurityPrms-expectedExcptCnt = 5
           io.snappydata.hydra.security.SnappySecurityPrms-unExpectedExcptCnt = 0
           threadGroups = snappyThreads;

//Execute the extracted DDLs and then load data using the saved data in parquet format
INCLUDE $JTESTS/io/snappydata/hydra/dataExtractorTool/dataExtractorRestoreData.conf;

INCLUDE $JTESTS/io/snappydata/hydra/northwind/stopEmbeddedModeCluster.conf;

io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar;
io.snappydata.hydra.cluster.SnappyPrms-shufflePartitions = 6;
io.snappydata.hydra.cluster.SnappyPrms-serverLauncherProps = " -heap-size=4g -memory-size=4g ";
io.snappydata.hydra.cluster.SnappyPrms-forceStart = true;
hydra.Prms-maxResultWaitSec            = 900;

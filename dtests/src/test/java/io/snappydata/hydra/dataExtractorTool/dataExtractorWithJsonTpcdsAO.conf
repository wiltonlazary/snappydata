hydra.Prms-testRequirement = "Test to verify, dataExtractor feature in a clean shut down case with json,tpcds
                              and AO data";
 hydra.Prms-testDescription = "The test starts a normal cluster ,creates tables and populates it.
  Then the cluster is stopped and restarted in recovery mode.
  After the cluster is started in recovery mode, dml ops and ddls are executed,
   validation is done to see if the cluster has recovered all and correct data.";

 INCLUDE $JTESTS/io/snappydata/hydra/northwind/startEmbeddedModeCluster.conf;

 //Create and load AO and climateChange tables.
 INITTASK  taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSQLScripts
           io.snappydata.hydra.cluster.SnappyPrms-sqlScriptNames = createAndLoadTableWithJsonTpcdsAO.sql
           io.snappydata.hydra.cluster.SnappyPrms-dataLocation = ${dataFilesLocation}
           threadGroups = snappyThreads;

//Load the json data in the tables testL1...testL5.
 INITTASK  taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSnappyJob
           io.snappydata.hydra.cluster.SnappyPrms-jobClassNames = io.snappydata.hydra.putInto.LoadDataFromJson
           io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
           io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "jsonFile=${jsonFileLoc},tableName=testl,fromVal=1,untilVal=3"
           threadGroups = snappyThreads;


//Load the TPDCS data.
INITTASK   taskClass = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSnappyJob
           io.snappydata.hydra.cluster.SnappyPrms-jobClassNames = io.snappydata.hydra.preparedStmt.PopulateDataJob
           io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "dataFilesLocation=${tpcdsFileLoc}"
           io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
           threadGroups = leadThreads
           ;

 // Take table count
 INITTASK    taskClass  = io.snappydata.hydra.cdcConnector.SnappyCDCTest taskMethod  = HydraTask_storeDataCount
             io.snappydata.hydra.cdcConnector.SnappyCDCPrms-dataLocation = ${queryPath}
             io.snappydata.hydra.cdcConnector.SnappyCDCPrms-isBeforeRestart = true
             threadGroups = snappyThreads;

 //Stop the cluster
 INITTASK    taskClass  = io.snappydata.hydra.cdcConnector.SnappyCDCTest taskMethod  = HydraTask_stopCluster
             io.snappydata.hydra.cdcConnector.SnappyCDCPrms-snappyFileLoc = ${snappyBinPath}
             threadGroups = snappyThreads;


INCLUDE $JTESTS/io/snappydata/hydra/dataExtractorTool/dataExtractorToolStartStopCluster.conf;

INCLUDE $JTESTS/io/snappydata/hydra/northwind/stopEmbeddedModeCluster.conf;

io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar;
io.snappydata.hydra.cluster.SnappyPrms-shufflePartitions = 6;
io.snappydata.hydra.cluster.SnappyPrms-serverLauncherProps = " -heap-size=8g -memory-size=20g ";
hydra.Prms-maxResultWaitSec            = 3600;
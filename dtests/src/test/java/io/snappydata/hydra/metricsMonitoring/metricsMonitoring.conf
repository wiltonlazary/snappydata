hydra.Prms-testRequirement = "Test to create and load tables required for Stability Test when the data size in a cluster is more than 1 TB";
hydra.Prms-testDescription = "
Test includes 5 schemas with varying data scale such that the data size in a cluster is more than 1 TB

Schemas used:
1. patients
2. Airline
3. NYC Taxi
4. Reviews
5. TPCH

External data sources used:
1. Parquet
2. CSV

Cluster configuration details:
Servers: 5-6 data servers each on a seperate physical host
Leads: 1 node
Locators: 1 node
Buckets: default
Redundancy:0

MALLOC settings:
 MALLOC_ARENA_MAX=4
 MALLOC_MMAP_MAX_=2147483647
 MALLOC_MMAP_THRESHOLD_=131072
";

INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/topology_1.inc;

hydra.GemFirePrms-names = gemfire1;
hydra.ClientPrms-gemfireNames = gemfire1;
hydra.GemFirePrms-distributedSystem = ds;


THREADGROUP snappyThreads
            totalThreads = fcn "(${${A}Hosts} * ${${A}VMsPerHost} *  ${${A}ThreadsPerVM}) " ncf
            totalVMs     = fcn "(${${A}Hosts} * ${${A}VMsPerHost})" ncf
            clientNames  = fcn "hydra.TestConfigFcns.generateNames(\"${A}\",
                                ${${A}Hosts}, true)" ncf;


INITTASK    taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = initSnappyArtifacts
            runMode = always
            threadGroups = snappyThreads;

INITTASK    taskClass   = io.snappydata.hydra.cluster.SnappyConcurrencyTest taskMethod  = createAndLoadTablesForStabilityTest
            threadGroups = snappyThreads;


hydra.Prms-totalTaskTimeSec           = 300;
hydra.Prms-maxResultWaitSec           = 54000;

// hydra.Prms-maxCloseTaskResultWaitSec  = 36000;
hydra.Prms-serialExecution            = false;

hydra.CachePrms-names = defaultCache;
sql.SQLPrms-useGfxdConfig = true;

/* end task must stop snappy members because they are not stopped by Hydra */
hydra.Prms-alwaysDoEndTasks = true;

hydra.VmPrms-extraVMArgs   += fcn "hydra.TestConfigFcns.duplicate
                                  (\"-Xms512m -Xmx1g \", ${${A}Hosts}, true)"
                              ncf;
hydra.VmPrms-extraVMArgsSUN += "-XX:PermSize=64M -XX:MaxPermSize=256m";

io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar;
io.snappydata.hydra.cluster.SnappyPrms-isLongRunningTest = true;
io.snappydata.hydra.cluster.SnappyPrms-isStabilityTest = true;
io.snappydata.hydra.cluster.SnappyPrms-dataPathListForParquet = /export/shared/QA_DATA/NYCBigData2009-2016_Parquet /export/shared/QA_DATA/airlinedata_cleaned_3b /export/shared/QA_DATA/amezon_reviews_160Million_447;
io.snappydata.hydra.cluster.SnappyPrms-parquetExternalTableList = STAGING_NYCTAXI STAGING_AIRLINE STAGING_REVIEWS;
io.snappydata.hydra.cluster.SnappyPrms-tableList = NYCTAXI AIRLINE REVIEWS ;
io.snappydata.hydra.cluster.SnappyPrms-tableType = column;
//io.snappydata.hydra.cluster.SnappyPrms-tableOptions = "partition_by 'id'" "buckets '17'" "redundancy '1'";
io.snappydata.hydra.cluster.SnappyPrms-externalTableListForInsert = STAGING_NYCTAXI STAGING_AIRLINE STAGING_REVIEWS ;
io.snappydata.hydra.cluster.SnappyPrms-insertTableList =  NYCTAXI airline REVIEWS ;

hydra.Prms-testRequirement = "Test cdc in smart Connector mode with HA ";
hydra.Prms-testDescription = "The test does the following:
A cluster is started in smart connector mode,then tables are created and populated.
then a validtion job is executed ,which will record the number of rows in each table at snappy and sql server side in a file.
Then ingestion app will ingest some records in the sqlserver.
After which cdc streaming application is started and it keeps running in the bg.
Now again ingestion app is run along with node HA.
And at the end validation is done ,to check if the changes in the sqlserver has been reflected in the snappy cluster.";

INCLUDE $JTESTS/io/snappydata/hydra/cdcConnector/cdcBasicValidationTest.conf;
INCLUDE $JTESTS/io/snappydata/hydra/cdcConnector/snappyHA.inc;

TASK    taskClass  = io.snappydata.hydra.cdcConnector.SnappyCDCTest taskMethod  = HydraTask_closeStreamingJob
            io.snappydata.hydra.cluster.SnappyPrms-sparkJobClassNames = io.snappydata.app.JavaCdcStreamingApp
            io.snappydata.hydra.cluster.SnappyPrms-sparkSubmitExtraPrms = " --total-executor-cores=${coresPerStrmApp} --jars ${connectorJar},${driverJar},${testJar} "
            io.snappydata.hydra.cluster.SnappyPrms-userAppArgs = "${connectionPropFile1} ${sourceDestFile} "
            io.snappydata.hydra.cluster.SnappyPrms-userAppJar = "${pocJar}"
            io.snappydata.hydra.cdcConnector.SnappyCDCPrms-isResubmitApp = true
            io.snappydata.hydra.cdcConnector.SnappyCDCPrms-isCDCStream = true
            io.snappydata.hydra.cdcConnector.SnappyCDCPrms-appName= "JavaCdcStreamingApp"
            threadGroups = snappyThreads
            startInterval = 480  //after 8 mins resubmit the streaming app
            endInterval   = 480
            maxThreads = 1
            ;

